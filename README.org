#+TITLE: Michael David's =.emacs.d=

#+html: <img align="right" src="docs/resize.png?raw=true" alt="Logo" width="300"/>

This is an personal, customised and quite unoptimised config â€• but it's mine.

Emacs drives me crazy a lot of the time and I'm not really a huge fan of Emacs lisp. However, it's really hard to get out of my life (and I don't want to). My =.emacs.d= is heavily inspired by Spacemacs and is built mainly around Windows & Linux. It's made for scentific use, and aims to be: quick, minimal, logical, and maintainable.

Honestly, I really just use this for orgmode, R, LaTex... and Emacs lisp.

This configuration is opionated, but actually pretty close to defaults. Things move rapidly on master. It's not built for others to directly use.

* Keymap / Notes

My config uses Evil, but note I only have two input modes:

- Emacs mode (default)
- A modified normal mode (vim)

I don't have a vim insert state.

* Preview

#+ATTR_HTML: :alt A really messy code base
[[file:docs/preview.png]]
#+ATTR_HTML: :alt When I need to shut up and fucking write something (example here only).
[[file:docs/writing-preview.png]]

* Notes to Self

- =C-u M-^= - delete-indentation and pull up
- =(global-set-key (kbd "C-c C-\\") 'xah-shrink-whitespaces)=

#+begin_src emacs-lisp
(use-package expand-region
  :bind (("M-[" . er/expand-region)
         ("C-(" . er/mark-outside-pairs)))
#+end_src

https://github.com/noctuid/general.el#which-key-integration

#+begin_src emacs-lisp
(general-define-key
 :prefix "SPC"
 :keymaps 'normal
 ;; unbind SPC and give it a title for which-key (see echo area)
 "" '(nil :which-key "my lieutenant general prefix")
 ;; bind nothing but give SPC f a description for which-key
 "f" '(:ignore t :which-key "file prefix")
 ;; use a cons as a replacement
 "g" '(:ignore t :wk ("g-key" . "git prefix"))
 ;; toggle lispy; use a function as a replacement to show if currently on
 "l" '(lispy-mode :wk my-lispy-which-key-display)
 ;; for a keymap, only the keys will be matched;
 ;; :no-match-binding is not necessary
 "p" '(:keymap projectile-command-map :wk "projectile prefix")
 ;; don't display this keybinding at all
 "z" '(hidden-command :wk t)
 ...)
#+end_src
